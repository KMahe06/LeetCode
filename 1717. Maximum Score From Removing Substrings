/*
You are given a string s and two integers x and y. You can perform two types of operations any number of times.

Remove substring "ab" and gain x points.
For example, when removing "ab" from "cabxbae" it becomes "cxbae".
Remove substring "ba" and gain y points.
For example, when removing "ba" from "cabxbae" it becomes "cabxe".
Return the maximum points you can gain after applying the above operations on s.

 

Example 1:

Input: s = "cdbcbbaaabab", x = 4, y = 5
Output: 19
Explanation:
- Remove the "ba" underlined in "cdbcbbaaabab". Now, s = "cdbcbbaaab" and 5 points are added to the score.
- Remove the "ab" underlined in "cdbcbbaaab". Now, s = "cdbcbbaa" and 4 points are added to the score.
- Remove the "ba" underlined in "cdbcbbaa". Now, s = "cdbcba" and 5 points are added to the score.
- Remove the "ba" underlined in "cdbcba". Now, s = "cdbc" and 5 points are added to the score.
Total score = 5 + 4 + 5 + 5 = 19.

*/




class Solution {
    public int maximumGain(String s, int x, int y) {
        int countA = 0;
        int countB = 0;
        int result = 0;
        int less = Math.min(x,y);
        
        for(int i = 0 ; i < s.length() ; i++){
            char ch = s.charAt(i);
            
            if(ch > 'b'){
                result += Math.min(countA , countB) * less;
                countA = 0;
                countB = 0;
            }else if(ch == 'a'){
                if(x < y && countB > 0){
                    countB--;
                    result += y;
                }else{
                    countA++;
                }
            }else{
                if(x > y && countA > 0){
                    countA--;
                    result+=x;
                }else{
                    countB++;
                }
            }
            
        }
        result+= Math.min(countA , countB)* less;
        
        return result;
    }
}
